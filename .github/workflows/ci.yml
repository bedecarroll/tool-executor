name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  lint-and-test:
    name: Lint & Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }} # Required for Codecov Test Analytics uploads.
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install mise
        uses: jdx/mise-action@v3

      # rustup caches can omit components; install them explicitly to guarantee rustfmt/clippy availability.
      - name: Install rust components
        run: rustup component add --toolchain 1.90.0 rustfmt clippy llvm-tools-preview

      - name: Cache cargo builds
        uses: Swatinem/rust-cache@v2
        with:
          cache-targets: true

      - name: Format
        run: mise run fmt

      - name: Lint
        run: mise run lint

      - name: Tests (nextest)
        run: mise run test

      - name: Doctests
        run: mise run test-doc

      - name: Upload test results to Codecov
        if: always()
        uses: codecov/test-results-action@v1
        with:
          token: ${{ env.CODECOV_TOKEN }}
          files: target/nextest/ci/junit.xml
          flags: rust-unit

      - name: Upload test report artifact
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: nextest-junit-${{ matrix.os }}
          path: target/nextest/ci/junit.xml
          if-no-files-found: error
      - name: Generate coverage report
        if: success()
        shell: bash
        run: |
          mkdir -p coverage
          cargo llvm-cov report --lcov --output-path coverage/lcov.info
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            cargo llvm-cov report --html --output-dir coverage/html
          fi

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v5
        with:
          files: coverage/lcov.info
          flags: rust-unit
          name: coverage-${{ matrix.os }}
          use_oidc: true
          fail_ci_if_error: true
          verbose: true

      - name: Upload coverage artifact
        if: ${{ success() && matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v5
        with:
          name: coverage-html
          path: coverage/html
          if-no-files-found: error
